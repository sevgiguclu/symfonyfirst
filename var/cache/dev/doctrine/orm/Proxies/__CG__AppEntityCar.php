<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Car extends \App\Entity\Car implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'keywords', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'marka', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'fuel_type', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'gear_shape', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'model_year', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'km', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'city', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'updated_at', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'detail', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'images', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'userid'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'keywords', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'marka', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'fuel_type', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'gear_shape', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'model_year', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'km', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'city', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'updated_at', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'detail', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'images', '' . "\0" . 'App\\Entity\\Car' . "\0" . 'userid'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Car $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(?string $title): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeywords(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeywords', []);

        return parent::getKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeywords(?string $keywords): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeywords', [$keywords]);

        return parent::setKeywords($keywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(?string $image): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(?string $type): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarka(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarka', []);

        return parent::getMarka();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarka(?string $marka): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarka', [$marka]);

        return parent::setMarka($marka);
    }

    /**
     * {@inheritDoc}
     */
    public function getFuelType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFuelType', []);

        return parent::getFuelType();
    }

    /**
     * {@inheritDoc}
     */
    public function setFuelType(?string $fuel_type): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFuelType', [$fuel_type]);

        return parent::setFuelType($fuel_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getGearShape(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGearShape', []);

        return parent::getGearShape();
    }

    /**
     * {@inheritDoc}
     */
    public function setGearShape(?string $gear_shape): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGearShape', [$gear_shape]);

        return parent::setGearShape($gear_shape);
    }

    /**
     * {@inheritDoc}
     */
    public function getModelYear(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModelYear', []);

        return parent::getModelYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setModelYear(?int $model_year): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModelYear', [$model_year]);

        return parent::setModelYear($model_year);
    }

    /**
     * {@inheritDoc}
     */
    public function getKm(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKm', []);

        return parent::getKm();
    }

    /**
     * {@inheritDoc}
     */
    public function setKm(?int $km): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKm', [$km]);

        return parent::setKm($km);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice(?int $price): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(?string $city): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory(): ?\App\Entity\Category
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(?\App\Entity\Category $category): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(?string $status): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(?\DateTimeInterface $created_at): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(?\DateTimeInterface $updated_at): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetail', []);

        return parent::getDetail();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetail(?string $detail): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetail', [$detail]);

        return parent::setDetail($detail);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\App\Entity\Image $image): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', [$image]);

        return parent::addImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\App\Entity\Image $image): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', [$image]);

        return parent::removeImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserid(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserid', []);

        return parent::getUserid();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserid(?int $userid): \App\Entity\Car
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserid', [$userid]);

        return parent::setUserid($userid);
    }

}
